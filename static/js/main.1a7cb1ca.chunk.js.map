{"version":3,"sources":["logo.svg","QuizOptions.js","Quiz.js","App.js","reportWebVitals.js","index.js"],"names":["QuizOptions","props","state","callParentCheckOptions","bind","this","checkResults","option","className","onClick","Component","Quiz","riddle","playGame","correct","gameOver","renderOptions","play","min","max","Math","floor","random","sum","resultsArray","randomNumberArray","length","randomNumber","indexOf","push","console","log","i","result","field1","field2","generateRandomOptions","sort","a","b","answer","setState","map","classNames","renderMessage","App","src","logo","alt","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1a7cb1ca.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, {Component} from 'react';\r\n\r\nclass QuizOptions extends Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {};\r\n        this.callParentCheckOptions = this.callParentCheckOptions.bind(this);\r\n    }\r\n    callParentCheckOptions(){\r\n        this.props.checkResults(this.props.option);\r\n    }\r\n    render(){\r\n        return(\r\n            <div className=\"fields animated zoomIn\" onClick={this.callParentCheckOptions}> \r\n               <div className=\"field-block\">{this.props.option}</div> \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default QuizOptions;","import React, {Component} from 'react';\r\nimport QuizOptions from './QuizOptions';\r\nimport classNames from 'classnames';\r\n\r\nclass Quiz extends Component{\r\n  constructor(props){\r\n    super(props);\r\n\r\n    let riddle = this.playGame();\r\n    let correct = false;\r\n    let gameOver = false;\r\n\r\n    this.state = {riddle, correct, gameOver};\r\n\r\n    this.renderOptions = this.renderOptions.bind(this);\r\n    this.checkResults = this.checkResults.bind(this);\r\n    this.play = this.play.bind(this);\r\n  }\r\n  randomNumber(min, max){\r\n    return Math.floor(Math.random() * (max-min+1)) +min;\r\n  }\r\n  generateRandomOptions(sum){\r\n    let result = sum;\r\n    let resultsArray = [];\r\n    let randomNumberArray = [];\r\n\r\n    while(randomNumberArray.length <= 3){\r\n      let randomNumber = this.randomNumber(1, 19);\r\n      if(randomNumberArray.indexOf(randomNumber) > -1) continue;\r\n      randomNumberArray.push(randomNumber);\r\n    }\r\n     \r\n     console.log(randomNumberArray);\r\n     \r\n    for(let i = 0; i < 3; i++){\r\n      let addSubtract = this.randomNumber(0,1);\r\n      let result = sum;\r\n      if(addSubtract === 1){\r\n        // add the sum to the result\r\n        result += randomNumberArray[i];\r\n        resultsArray.push(result);\r\n      }else{\r\n        // Subtract the number from the  \r\n        result -= randomNumberArray[i];\r\n        resultsArray.push(result);\r\n      }\r\n    }\r\n\r\n    return resultsArray;\r\n  }\r\n  playGame(){\r\n    let field1 = this.randomNumber(20,50);\r\n    let field2 = this.randomNumber(20,50);\r\n    let result = field1 + field2;\r\n    let resultsArray = this.generateRandomOptions(result);\r\n    resultsArray.push(result);\r\n    resultsArray.sort(function(a,b){return 0.5 - Math.random()});\r\n    let riddle = {\r\n       resultsArray: resultsArray,\r\n       field1: field1,\r\n       field2: field2,\r\n       answer: result\r\n    };\r\n\r\n    console.log(riddle);\r\n    \r\n     if(this.state && this.state.gameOver) {\r\n       this.setState({riddle: riddle});\r\n     } else{\r\n      return riddle;\r\n     }\r\n\r\n  }\r\n  checkResults(option){\r\n    console.log('checkResults called '+option);\r\n    if(this.state.riddle.answer === option){\r\n      console.log('correct answer');\r\n      this.setState({correct: true, gameOver: true});\r\n    } else{\r\n      console.log('wrong answer');\r\n      this.setState({correct: false, gameOver: true});\r\n    }\r\n  }\r\n  renderOptions(){\r\n    return(\r\n      <div className=\"options\">\r\n            {this.state.riddle.resultsArray.map((option, i)=>\r\n              <QuizOptions option={option} key={i} checkResults={(option) => this.checkResults(option)}/>\r\n            )}\r\n         \r\n           \r\n      </div>\r\n    );\r\n  }\r\n  renderMessage(){\r\n    if(this.state.correct){\r\n      return <h3>Wow Good Job! Hit the button below to play Again!</h3>\r\n    } else{\r\n      return <h3>ohh ohh Wrong Choice! Hit the button below to play Again!</h3>\r\n    }\r\n  }\r\n  play(){\r\n    this.setState({correct: false, gameOver: false});\r\n    this.playGame();\r\n  }\r\n    render(){\r\n        return(\r\n            <div className=\"quiz\">\r\n               <div className=\"quiz-content\">\r\n                 <p className=\"question\"> WHAT IS THE SUM OF <span className=\"text-info\">{this.state.riddle.field1}</span> + <span className=\"text-info\"> {this.state.riddle.field2}</span> ?</p>\r\n                  {this.renderOptions()}\r\n               </div>\r\n               Correct: {this.state.correct ? \"True\" : \"False\"}<br/>\r\n               GameOver: {this.state.gameOver ? \"True\" : \"False\"}\r\n               <div className={classNames('after', {'hide': !this.state.gameOver}, {'wrong animated zoomInDown': !this.state.correct}, {'correct animated zoomInDown ': this.state.correct})}>\r\n                  {this.renderMessage()}\r\n               </div>\r\n               <div className=\"play-again\">\r\n                 <a className=\"button\" onClick={this.play}>Hit the Button Play Again</a>\r\n               </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Quiz;","import logo from './logo.svg';\nimport './App.css';\nimport React, {Component} from 'react';\nimport Quiz from './Quiz';\n\nclass App extends Component {\n     \n     render(){\n        \n      return (\n        <div className=\"App\">\n          <div className=\"App-header\">\n            <img src={logo} className=\"App-logo\" alt=\"logo\" />\n            <h2>WELCOME TO ULTIMATE SUM PRACTICE FOR CHILDREN</h2>\n          </div>\n          <Quiz/>\n        </div>\n      );\n\n     }\n   \n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}